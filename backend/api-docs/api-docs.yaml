openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: https://localhost:8445
  description: Generated server url
paths:
  /orders:
    get:
      tags:
      - order-rest-controller
      operationId: getOrdersReddis
      parameters:
      - name: page
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageOrder'
  /orders/{name}:
    get:
      tags:
      - order-rest-controller
      operationId: getOrderByNameReddis
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageOrder'
  /orders/user:
    get:
      tags:
      - order-rest-controller
      operationId: getOrdersByUser
      parameters:
      - name: page
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageOrder'
  /orders/date/{name}:
    get:
      tags:
      - order-rest-controller
      operationId: getOrderByDateReddis
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageOrder'
  /api/orders:
    get:
      tags:
      - order-rest-controller
      summary: Get orders
      operationId: getOrders
      parameters:
      - name: page
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "404":
          description: No order founded
        "200":
          description: Get orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /api/orders/{name}:
    get:
      tags:
      - order-rest-controller
      summary: Get orders by name
      operationId: getOrderByName
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "404":
          description: No order by name founded
        "200":
          description: Get orders by name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /api/orders/date/{name}:
    get:
      tags:
      - order-rest-controller
      summary: Get orders by date
      operationId: getOrderByDate
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "404":
          description: No order by datefounded
        "200":
          description: Get orders by date
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
components:
  schemas:
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    Item:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
        gender:
          type: string
        type:
          type: string
        imageFile:
          type: object
          properties:
            binaryStream:
              type: object
        stock:
          $ref: '#/components/schemas/StockObject'
        stocks:
          type: array
          items:
            $ref: '#/components/schemas/StockObject'
    ItemToBuy:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
        size:
          type: string
        count:
          type: integer
          format: int32
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        totalCost:
          type: number
          format: double
        creationDate:
          type: string
        state:
          type: string
          enum:
          - PENDING
          - CONFIRMED
          - DELIVERED
          - CANCELLED
        itemToBuys:
          type: array
          items:
            $ref: '#/components/schemas/ItemToBuy'
    PageOrder:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Order'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
    Size:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        label:
          type: string
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    StockObject:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        stock:
          type: integer
          format: int32
        size:
          $ref: '#/components/schemas/Size'
